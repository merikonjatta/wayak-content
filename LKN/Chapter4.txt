<!-- vim: set noexpandtab shiftwidth=4 wrap linebreak filetype=mediawiki: -->
{{#set: title=第4章: コンフィギュアとビルド}}
{{Nav
|prev=LKN/Chapter3
|next=LKN/Chapter5
}}

= 第4章: コンフィギュアとビルド =

ソースをダウンロードできましたので、ビルドしてみましょう。最初のステップは、カーネルを適切なオプションでコンフィギュアすることです。これが完了すればビルドできます。この2つのタスクには標準の''make''ユーティリティが使えます。


== コンフィギュレーションの作成 ==

カーネルのコンフィギュレーションは、ソースツリーのトップディレクトリに置いた''.config''というファイルに保管されます。ソースを展開したばかりならばこのファイルはまだ存在しませんので、自分で作成する必要があります。ゼロから書くか、デフォルト設定を流用し変更するか、動作中のカーネルで使われているものをコピーして使うか、もしくはディストリビューションのカーネルリリースに含まれるものをコピーして使う方法があります。この章では最初の2つの方法を解説します（残りの2つについては{{Link|LKN/Chapter4}}にて解説します。）


=== ゼロから作成する ===

カーネルをコンフィギュアするもっとも基本的な方法は、''make config''を使う方法です。

<pre>
$ cd linux-2.6.17.10
$ make config
 make config
scripts/kconfig/conf arch/i386/Kconfig
*
* Linux Kernel Configuration
*
*
* Code maturity level options
Prompt for development and/or incomplete code/drivers (EXPERIMENTAL) [Y/n/?] Y
*
* General setup
*
Local version - append to kernel release (LOCALVERSION) []
Automatically append version information to the version string (LOCALVERSION_AUTO) [Y/n/?] Y
...
</pre>

このプログラムは、カーネルのコンフィグオプションについてそれぞれ、有効にするかどうかの質問をしてきます。ふつう、選択肢は''[Y/m/n/?]''といった形式で提示されます。大文字になっているのがデフォルトの選択肢で、エンターを押すだけでそれを選んだことになります。この場合の4つの選択肢は

* y 有効にする（カーネルに組み込む）
* n 無効にする（組み込まない）
* m モジュールとしてビルドし、必要なときに読み込む
* ? このオプションについて簡単な説明を表示する

カーネルには2000近いオプションが存在します。このプログラムでは全部のオプションを1つずつ設定することになるので、大変時間がかかります。そこでもう少し簡単なコンフィギュア方法があります。それは、すでにビルドされたコンフィギュレーションを流用することです。


=== デフォルトのコンフィギュレーション ===

カーネルにはバージョンごとにデフォルトコンフィギュレーションが付属しています。これらはおおよそ、カーネルのメンテナが最適だと思った内容に設定されています。ときには、メンテナが個人的に使っている設定内容だったりもします。たとえばi386アーキテクチャのデフォルトコンフィギュレーションはリーナス・トーバルズ氏の開発用マシンのコンフィギュレーションにそっくりです。

このデフォルトコンフィギュレーションを作成するには、次のコマンドを実行します。

<pre>
$ cd linux-2.6.17.10
$ make defconfig
</pre>

大量のオプションが画面をスクロールし、''.conig''ファイルが生成されます。これでコンフィギュレーションは一応完了ですが、マシンに合わせてカスタマイズする必要があります。


== コンフィギュレーションを変更する ==

これでコンフィギュレーションの叩き台ができましたので、マシンのハードウェア構成に合わせて変更しましょう。どのオプションを変更すべきかについては{{Link|LKN/Chapter7}}を参照してください。ここではオプションを変更する方法について説明します。

インタラクティブなコンフィグツールは主に3つ用意されています。CUIで動作する''menuconfig''、GTK+のGUIで動作する''gconfig''、そしてQTのGUIで動作する''xconfig''です。


=== CUIでコンフィグする ==

''menuconfig''はCUIプログラムですが、キーボードの矢印キーを使ってナビゲートすることができます。起動するには

<pre>
$ make menuconfig
</pre>

図4-1のような画面が出るでしょう。

[[File:lkn-fig0401.gif|none|frame|図4-1. menuconfigの画面]]

画面上部には操作方法と記号の意味が表示されていて、残りはカーネルのオプション一覧になっています。

オプションはトピックごとにいくつかのセクションに分かれています。セクション内はさらに細かいサブセクションに分かれていることもあります。たとえばデバイスドライバは全て<code>Device Drivers</code>メニューに含まれます。その行がハイライトされるまで矢印キーを押し（図4-2）、Enterを押すと、サブメニューが開きます（図4-3）。同じようにしてさらに階層を下っていくことができます。たとえば<code>Generic Driver Options</code>を開くと図4-4のようになります。

[[File:lkn-fig0402.gif|none|frame|図4-2. Device Driversをハイライト]]

[[File:lkn-fig0403.gif|none|frame|図4-3. Device Driversのサブメニュー]]

[[File:lkn-fig0404.gif|none|frame|図4-4. Generic Driver Optionsサブメニュー]]

最初の2つの項目には<code>[*]</code>記号がついています。これは項目が選択されており、Yes/Noオプションであることを示します。3つ目のオプションには<code>&gt; &lt;</code>記号がついています。これは、カーネルに組み込む(Y)、モジュールとしてビルドする(M)、もしくは除外する(N)が選べることを示します。

オプションをYで選択すると、<code>[ ]</code>内に<code>*</code>が表示されます。同じくMで選択するとM、Nで選択すると空白になります。

したがって、たとえばコンパイル時に外部ファームウェアを必要とせず、ファームウェアのビルド防止を無効にし、なおかつユーザースペース・ファームウェアローダをモジュールとして使いたければ、最初のオプションではY、2つ目はN、3つ目はMを押します。画面は図4-5のようになります。

[[File:lkn-fig0405.gif|none|frame|図4-5. 変更後のGeneric Driver Optionsサブメニュー]]

変更できたら、Escapeか→Enterを押し、このメニューを出ます。その他すべてのオプションは同様にして閲覧および変更できます。すべての変更が完了したら、メインメニューでEscapeを押します。図4-6のように保存するかどうか聞かれます。

[[File:lkn-fig0406.gif|none|frame|図4-6. カーネルオプションの保存]]

このままEnterを押すと保存しますし、<code>No</code>を選択すると今回の変更は破棄されます。


=== GUIでコンフィグする ===

''gconfig''と''xconfig''ではGUIを使ってカーネルのコンフィグを変更できます。この2つのプログラムは、使用するGUIツールキットが違う以外はほぼ同じです。''gconfig''はGTK+で書かれていて、図4-7のように2分割の画面構成になっています。

[[File:lkn-fig0407.gif|none|frame|図4-7. make gconfigの画面]]

''xconfig''はQTベースで書かれていて、図4-8のように3分割の画面になっています。

[[File:lkn-fig0408.gif|none|frame|図4-8. make xconfigの画面]]

マウスでサブメニューに入ったりオプションを選択したりできます。たとえば図4-8では<code>Generic Driver Options</code>が選択できます。xconfigの画面は図4-9のようになります。gconfigでは図4-10のようになります。

[[File:lkn-fig0409.gif|none|frame|図4-9. make xconfigのGeneric Driver Options]]

[[File:lkn-fig0410.gif|none|frame|図4-10. make gconfigのGeneric Driver Options]]

2つ目のオプションを無効にし、3つ目のオプションをモジュールとして使うよう設定すると図4-11と図4-12のように変わります。

[[File:lkn-fig0411.gif|none|frame|図4-11. 変更後のmake xconfigのGeneric Driver Options]]

[[File:lkn-fig0412.gif|none|frame|図4-12. 変更後のmake gconfigのGeneric Driver Options]]

''gconfig''では、チェックされたボックスはオプションがカーネルに組み込まれる事を示し、横線が引かれたボックスはモジュールとしてビルドされることを示します。''xconfig''ではモジュールとしてビルドされるオプションは点が打たれたボックスとして表示されるので気をつけて下さい。

これらのプログラムは両方、終了時に設定を保存するかどうか聞くようになっています。また、別のファイルとして保存することもできます。


== カーネルをビルドする ==

<references/>

{{Nav
|prev=LKN/Chapter3
|next=LKN/Chapter5
}}
