<!-- vim: set noexpandtab shiftwidth=4 wrap linebreak filetype=mediawiki: -->
{{#set: title=第5章: インストールとブート}}
{{Nav
|prev=LKN/Chapter4
|next=LKN/Chapter6
}}

= 第5章: インストールとブート =

ここまでの章でカーネルのダウンロードとビルドについて解説しました。実行ファイルと、ともにビルドしたモジュールが手元にありますので、インストールしてブートを試みましょう。この章のコマンドはこれまでと違い、すべてroot権限で実行する必要があります。そのためにはコマンドの頭に''sudo''をつけるか、''su''コマンドでrootになるか、はじめからrootとしてログインしておいてください。

''sudo''がインストールされていてアクセス権が正常に設定されているか確認するには、以下のコマンドを実行します。

 $ '''sudo ls ~/linux/linux-2.6.17.11/Makefile'''
 Password:
 Makefile

パスワードは、自分のユーザのパスワードか、rootユーザのパスワードを入力します。どちらかは''sudo''の設定によります。これが正常に動作し、
 Makefile
という行が表示されれば、次の節まで飛ばして結構です。

''sudo''がインストールされていないか、権限が設定されていなければ、''su''コマンドを試してください。

 $ '''su'''
 Password:
 # '''exit'''
 exit
 $

パスワードは、rootユーザのパスワードを入力します。これが成功すれば、全てのコマンドがroot権限で実行されるモードに切り替わります。この状態では操作に気をつけて下さい。最小限のコマンド入力に留めるべきです。''exit''すれば元のユーザアカウントの状態に戻ります。


== ディストリビューションのインストールスクリプトを使う ==

ほとんどのディストリビューションには、''installkernel''というスクリプトが付属します。このスクリプトを使えばカーネルを自動的にインストールし、ブートローダを書き換えてくれますので、開発者側では他にするべき作業はありません<ref>Gentooなどの「ゼロから」タイプのディストリビューションは例外。これらのディストリビューションはユーザがカーネルを自分でインストールできることを前提としています。とはいえドキュメンテーションは付属するので、必要に応じて参照してください。</ref>。

{{LKN/Tip | ''installkernel''は大抵、''mkinitrd''というパッケージに入っています。見つからない場合はこのパッケージをインストールしてみてください。 }}

何らかのモジュールをビルドしていて、この方法を利用したい場合は、まず最初に
 # '''make modules_install'''
を実行してください。これでモジュールがファイルシステム内の正常な場所に配置され、カーネルによって発見できるようになります。通常これは''/lib/modules/kernel_version''ディレクトリです（''kernel_version''はビルドしたカーネルのバージョン）。

モジュールがインストールできたら、カーネルのメインイメージをインストールします。

 # '''make install'''

これによって以下のプロセスが起動されます。

# カーネルが正常にビルドされていることを確認
# 静的な部分を''/boot''ディレクトリにインストールし、実行ファイルにバージョンに応じた名前をつける
# ''modules_install''でインストールされたモジュールを使い、必要なRAMディスクイメージを作成
# ブートローダに新しいカーネルが存在することが通知され、ブートメニューに追加される
# ここまででカーネルのインストールは完了。マシンをリブートし、新しいカーネルを動作させることができます。ここまでの操作では古いカーネルイメージは消去されませんので、何か不都合があればブート時に以前のカーネルを選択することができます。


== 手動でインストールする ==

ディストリビューションに''installkernel''が付属しない場合や、手動でインストールすることで各ステップを理解したい場合は、以下の手順に従ってください。

まずモジュールをインストールします。

 # make modules_install

静的イメージを''/boot''ディレクトリにコピーします。まずカーネルバージョンを確認します。i386ベースのカーネルならば：

 # '''make kernelversion'''
 2.6.17.11

あなたのカーネルのバージョンは恐らく異なっていると思います。これを使って次のコマンドを実行します。

 # cp arch/i386/boot/bzImage /boot/bzImage-KERNEL_VERSION
 # cp System.map /boot/System.map-KERNEL_VERSION

次にブートローダの設定を変更します。GRUBおよびLILOブートローダの設定ファイルを変更する手順については以降の節を参照してください。

ブートプロセスが失敗する原因としてよくあるのは、必要なRAMディスクが存在しないことです。RAMディスクを正常に作成するには、この章の冒頭で紹介した自動インストー雨を使ってください。ディストリビューションのインストールスクリプトにはRAMディスクを作成するためのツールやスクリプトが揃っています。ディストリビューションによって詳細が異なりますので、RAMディスクイメージを正常に作成する方法は本書の範囲外です。

以下のスクリプトを使えばここまでのコマンドをいちいち入力しなくても自動的にカーネルをインストールできます。

<pre>
#!/bin/sh
#
# installs a kernel
#
make modules_install

# find out what kernel version this is
for TAG in VERSION PATCHLEVEL SUBLEVEL EXTRAVERSION ; do
    eval &grave;sed -ne "/^$TAG/s/ //gp" Makefile&grave;
done
SRC_RELEASE=$VERSION.$PATCHLEVEL.$SUBLEVEL$EXTRAVERSION

# figure out the architecture
ARCH=&grave;grep "CONFIG_ARCH " include/linux/autoconf.h | cut -f 2 -d "\""&grave;

# copy the kernel image
cp arch/$ARCH/boot/bzImage /boot/bzImage-"$SRC_RELEASE"

# copy the System.map file
cp System.map /boot/System.map-"$SRC_RELEASE"

echo "Installed $SRC_RELEASE for $ARCH"
</pre>


== ブートローダを書き換える ==

Linuxでよく使われるブートローダは主に2つあります。GRUBとLILOです。最近のディストリビューションではGRUBのほうがよく使われますが、LILOもまだ人気があります。ここでは両方について解説します。

システムのブートローダを確認するには、''/boot''ディレクトリを見ます。''grub''サブディレクトリがあればGRUBです。

 $ '''ls -F /boot | grep grub
 grub/

このサブディレクトリがない場合は、''/etc/lilo.conf''を探します。

 $ '''ls /etc/lilo.conf'''
 /etc/lilo.conf

このファイルが存在すればブートローダはLILOです。

新しいカーネルのオプションを追加する手順はそれぞれで異なりますので、該当する節をご覧下さい。


=== GRUB ===

GRUBに新しいカーネルのエントリを追加するには、''/boot/grub/menu.lst''を編集し、既存のエントリをコピー＆ペーストすれば簡単です。たとえば以下のGentoo用menu.lstファイルを見てください。

<pre>
timeout 300
default 0

splashimage=(hd0,0)/grub/splash.xpm.gz

title 2.6.16.11
    root (hd0,0)
    kernel /bzImage-2.6.16.11 root=/dev/sda2 vga=0x0305
 
title 2.6.16
    root (hd0,0)
    kernel /bzImage-2.6.16 root=/dev/sda2 vga=0x0305
</pre>

<code>title</code>で始まる行がひとつのエントリを示します。このファイルには2つのエントリが含まれることになります。<code>title</code>で始まるブロックをまるごとコピーし、ファイルの末尾にペーストします。バージョン番号をインストールしたばかりのカーネルバージョンに書き換えます。タイトル自体は重複しない限りなんでも構いませんが、ブートメニューに表示されますので分かりやすいものにしておいたほうがいいでしょう。最終的にこうなります：

<pre>
timeout 300
default 0

splashimage=(hd0,0)/grub/splash.xpm.gz

title 2.6.16.11
    root (hd0,0)
    kernel /bzImage-2.6.16.11 root=/dev/sda2 vga=0x0305
 
title 2.6.16
    root (hd0,0)
    kernel /bzImage-2.6.16 root=/dev/sda2 vga=0x0305
 
title 2.6.17.11
    root (hd0,0)
    kernel /bzImage-2.6.17.11 root=/dev/sda2 vga=0x0305
</pre>

ファイルを保存したらシステムをリブートし、ブートメニューに新しい項目が増えていることを確認します。矢印キーで選択し、Enterを押せば新しいカーネルが起動します。


=== LILO ===

LILOに新たなカーネルのエントリを追加するには、''/etc/lilo.conf''を編集した上で''lilo''コマンドを実行し変更内容を適用します。''lilo.conf''の詳細な説明はLILOのMANページを参照してください：

 $ '''man lilo'''

新たなエントリを作るには既存のエントリをコピー＆ペーストするのが簡単です。たとえば以下のようなGentoo用のLILO設定ファイルがあったとします。

<pre>
boot=/dev/hda
prompt
timeout=50
default=2.6.12

image=/boot/bzImage-2.6.15
    label=2.6.15
    read-only
    root=/dev/hda2

image=/boot/bzImage-2.6.12
    label=2.6.12
    read-only
    root=/dev/hda2
</pre>

<code>image=</code>で始まる行がひとつのエントリを示します。このファイルには2つのエントリが含まれていることになります。<code>image=</code>で始まるブロックをまるごとコピーし、ファイルの末尾にペーストします。バージョン番号をインストールしたばかりのカーネルバージョンに書き換えます。<code>label</code>は重複しない限りなんでも構いませんが、ブートメニューに表示されますので分かりやすいものにしておいたほうがいいでしょう。最終的にこうなります：

<pre>
boot=/dev/hda
prompt
timeout=50
default=2.6.12

image=/boot/bzImage-2.6.15
    label=2.6.15
    read-only
    root=/dev/hda2

image=/boot/bzImage-2.6.12
    label=2.6.12
    read-only
    root=/dev/hda2

image=/boot/bzImage-2.6.17
    label=2.6.17
    read-only
    root=/dev/hda2
</pre>

ファイルを保存したら、''/sbin/lilo''を起動し、設定内容をブートセクションに書き出します。

 # '''/bin/lilo'''

システムをリブートすれば、ブートメニューに新たな選択肢が増えているはずです。矢印キーで選択し、Enterを押せば新しいカーネルが起動します。


<references/>

{{Nav
|prev=LKN/Chapter4
|next=LKN/Chapter6
}}
