<!-- vim: set noexpandtab shiftwidth=4 wrap linebreak filetype=mediawiki: -->
{{#set: title=第2章: 必要事項}}
{{Nav
|prev=LKN/Chapter1
|next=LKN/Chapter3
}}

= 第2章: 必要事項 =

この章ではカーネルのコンフィギュア、ビルドそしてインストールのために必要なプログラムを紹介します。それぞれのプログラムの必要なバージョンについては ''Documentation/Changes'' ファイルを参照することをお勧めします。本稿はカーネルバージョン 2.6.18 を元に執筆されています。別のバージョンのカーネルを扱うならば ''Documentation/Changes'' ファイルに照らし、正しいバージョンを入手しているか確認してください。バージョンがずれていると問題が起こりやすく、解決しにくい状況に陥ります。


== ビルドのためのツール ==

大抵のLinuxディストリビューションにはカーネルをハックするためのオプションパッケージが用意されています。入手可能な場合はそれを利用したほうが、ひとつひとつインストールするより大幅に手順が削減できます。

とはいえ、カーネルをビルドするために必要なツールは3つだけです。コンパイラ、リンカ、そして''make''ユーティリティです。それぞれについて説明します。

=== コンパイラ ===

Linuxカーネルはごく一部のアセンブリ言語を除いた大部分がC言語で書かれています。したがってビルドにはCコンパイラgccが必要です。''gcc''というパッケージがほとんどのディストリビューションで提供されているはずです。自分でダウンロードしてビルドしたければ、 http://gcc.gnu.org/ から入手可能です。

カーネル2.6.18の時点では''gcc'' 3.2 がビルドに使える一番古いバージョンです。必ずしも最新の''gcc''を使うのがいいとは限らない点に注意してください。新しい''gcc''リリースの中にはカーネルをきちんとビルドできないものもありますので、コンパイラのバグを発見して報告したい方以外は控えたほうがいいでしょう。

このコマンドでシステムにインストールされている''gcc''のバージョンを確認できます：
<pre>
$ gcc --version
</pre>


=== リンカ ===

''gcc'' コンパイラだけではCのソースコードをコンパイルできません。加えて''binutils''という、リンクとアセンブルを担当するツールが必要です。''binutils''パッケージには他にも、ライブラリの中身を覗くなど、オブジェクトファイルを操るのに便利なユーティリティが含まれています。

''binutils''は大抵の場合、ディストリビューションの''binutils''（そのままですが）というパッケージで入手できます。自分でダウンロードしてビルドしたければ http://www.gnu.org/software/binutils から入手可能です。

カーネル2.6.18の時点では''binutils'' 2.12がカーネルのリンクに使える一番古いバージョンです。システムにインストールされている''binutils''のバージョンを確認するには：
<pre>
$ ld -v
</pre>


=== make ===

''make''は、カーネルのソースツリーを捜査し、コンパイルが必要なファイルを探し出し、コンパイラやその他のビルドツールを呼び出す役割を担います。カーネルのビルドにはGNU版の''make''が必要です。''make''というパッケージでインストールできるはずです。

自分でダウンロードしてビルドしたければ http://www.gnu.org/software/make から入手可能です。

カーネル2.6.18の時点では''make'' 3.79.1がカーネルのビルドに使える一番古いバージョンです。''make''は常に最新の安定版を使用することをお勧めします。新しいものの方が処理が高速だからです。

システムにインストールされている''make''のバージョンを確認するには：
<pre>
$ make --version
</pre>


== カーネルの利用に必要なツール ==

動作中のカーネルのバージョンは通常、ユーザアプリケーションには影響を及ぼしません。ただしバージョンが重要になる場面もいくつかあります。ここではすでにシステムにインストールされているであろうツールを紹介しますが、カーネルのバージョンを変更するとこれらのパッケージも更新しなければシステムが動作しないことがあります。


=== util-linux ===

''util-linux''パッケージは様々なタスクをこなす小さなユーティリティの集まりです。ディスクパーティションやハードウェアクロックに関連する物が多いです。

自分でダウンロードとインストールをしたければ http://www.kernel.org/pub/linux/utils/util-linux から入手可能です。

カーネル2.6.18の時点では''util-linux'' 2.10以上が正常に動作します。このパッケージは常に最新版を利用することをおすすめします。たとえばBindマウントなどは比較的新しいカーネルの機能であり、古いバージョンの''util-linux''では利用できません。

システムにインストールされている''util-linux''のバージョンを確認するには：
<pre>
$ fdformat --version
</pre>


=== module-init-tools ===

Linuxカーネルモジュールを利用するなら''module-init-tools''が必要です。カーネルモジュール（''kernel module''）とは、カーネルの動作中にロード・アンロードが可能な拡張機能のことです。デバイスドライバなどはハードウェア構成に合わせて動作中にロードするため、カーネルモジュールとして用意されることが多いです。カーネルモジュールは無駄なドライバやオプションのビルドを避けるため、すべてのLinuxディストリビューションで利用されています。必要なものだけロードするためメモリを節約することができます。

カーネルモジュールのロードの仕組みはカーネル2.6で大きく変貌を遂げました。モジュールのリンカ（シンボルを解決しメモリ内に配置するプログラム）がカーネルに組み込まれ、ユーザランドのツールは最低限に抑えられています。古いディストリビューションには''modutils''というパッケージが付属しますが、これはカーネル2.6では動作しません。代わりに''module-init-tools''を使う必要があります。

自分でダウンロードとインストールをしたければ http://www.kernel.org/pub/linux/utils/kernel/module-init-tools から入手可能です。

カーネル2.6.18で正常に動作する一番古いバージョンは''module-init-tools'' 0.9.10です。最新のカーネルの機能に対応するため、常に最新のバージョンをインストールすることをおすすめします。たとえばモジュールが''udev''パッケージに自動的にロードされるのを防ぐブラックリスト機能などは古いバージョンでは使用できません。

システムにインストールされている''module-init-tools''のバージョンを確認するには：
<pre>
$ depmod -V
</pre>


== ファイルシステム固有のツール ==

ディスクパーティションを作成・設定・フォーマットするためにファイルシステム固有のツールが必要になります。''util-linux''パッケージにも機能が含まれますが、別のパッケージが必要なケースが多いでしょう。

=== ext2/ext3/ext4 ===

''ext3''と試験的実装の''ext4''は、''ext2''の上位互換で、同じツールを使うことができます。比較的新しい''ext2''用のツールならばこれらのファイルシステムが扱えます。

''e2fsprogs''をインストールするといいでしょう。自分でダウンロードしインストールしたければ http://e2fsprogs.sourceforge.net/ から入手可能です。

カーネル2.6.18も時点では''e2fsprogs'' 1.29よりも新しいバージョンが必要です。''ext3''や''ext4''を有効利用するために最新版のインストールをおすすめします。

インストールされている''e2fsprogs''のバージョンを確認するには：
<pre>
$ tune2fs
</pre>

=== JFS ===

IBMのJFSファイルシステムを扱うには''jfsutils''パッケージが必要です。http://jfs.sourceforge.net/ から入手可能です。

カーネル2.6.18の時点では''jfsutils'' 1.1.3以上が必要です。インストールされている''jfsutils''のバージョンを確認するには：
<pre>
$ fsck.jfs -V
</pre>

=== ReiserFS ===

ReiserFSファイルシステムを扱うには''reiserfsprogs''パッケージが必要です。http://www.namesys.com/download.html から入手可能です。

カーネル2.6.18の時点では''reiserfsprogs'' 3.6.3以上が必要です。インストールされている''reiserfsprogs''のバージョンを確認するには：
<pre>
$ reserfsck -V
</pre>

=== XFS ===

SGIのXFSファイルシステムを扱うには''xfsprogs''パッケージが必要です。http://oss.sgi.com/projects/xfs から入手可能です。

カーネル2.6.18の時点では''xfsprogs'' 2.6.0以上が必要です。インストールされている''xfsprogs''のバージョンを確認するには：
<pre>
$ xfs_db -V
</pre>

=== Quotas ===

カーネルのクオータ機能を利用するには''quota-tools''パッケージが必要です
<ref>Debianなど一部のディストリビューションでのパッケージ名は''quota''です</ref>
。このパッケージにはユーザにクオータを設定し、クオータの利用状況の統計を確認したり、制限に近づいたときにアラートを出したりする機能が含まれます。

http://sourceforge.net/projects/linuxquota から入手可能です。

カーネル2.6.18の時点では''quota-tools'' 3.09が動作する一番古いバージョンです。インストールされている''quota-tools''のバージョンを確認するには：
<pre>
$ quota -V
</pre>

=== NFS ===

NFSファイルシステムを扱うには''nfs-utils''パッケージが必要です
<ref>Debianなど一部のディストリビューションでのパッケージ名は''nfs-common''です</ref>
。このパッケージにはNFSをクライアントとしてマウントする機能とNFSサーバ機能が含まれます。

http://nfs.sf.net/ から入手可能です。

カーネル2.6.18の時点では''nfs-utils'' 1.0.5以上が必要です。インストールされている''nfs-utils''のバージョンを確認するには：
<pre>
$ showmount --version
</pre>


== その他のツール ==

カーネルバージョンに強く結びつく重要なツールが他にも幾つかあります。これらは通常、必須というわけではありませんが、様々なハードウェアや機能に対応するために導入することになります。

=== udev ===

''udev''は、Linuxにおいて''/dev''ディレクトリに整合的なデバイス命名システムを提供するプログラムです。かつての（今はなくなった）''devfs''ファイルシステムと同じように、動的な''/dev''ディレクトリを作成します。ほぼ全てのディストリビューションが''udev''を使って''/dev''を管理しているので、マシンをブートするために必要になります。

残念ながら''udev''は、カーネルのバージョンによって度々仕様が変わる''/sys''ディレクトリの構造に依存します。過去に''/sys''の変更によって''udev''が動作しなくなり、ブートできなくなることがありました。カーネルのバージョンに合致した最新の''udev''を使っていて何か問題があれば、メーリングリスト linux-hotplug-devel@lists.sourceforge.net を通して開発者に報告してください。

''udev''はディストリビューション固有のブートプロセスと深く結びついている事が多いので、ディストリビューションに付属のバージョンを使うことを強くおすすめします。どうしても自分でアップグレードしたければ http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev.html から入手可能です。

カーネル2.6.18の時点では''udev'' 081が正常に動作する一番古いバージョンです。新しいカーネルとうまく連携するために、できるだけ新しいバージョンを使うことをおすすめします。

インストールされている''udev''のバージョンを確認するには：
<pre>
$ udevinfo -V
</pre>

=== プロセス管理ツール ===

''procps''パッケージには''ps''や''top''を中心としたプロセス管理および監視ツール群が含まれます。

自分でダウンロードしインストールしたければ http://procps.sourceforge.net/ から入手可能です。

カーネル2.6.18の時点では''procps'' 3.2.0以上が必要です。インストールされている''procps''のバージョンを確認するには：
<pre>
$ ps --version
</pre>

=== PCMCIAツール ===

LinuxでPCMCIAデバイスを利用するには、セットアップのためにユーザランドのヘルパプログラムが必要になります。古いバージョンのカーネルでは''pcmcia-cs''と呼ばれていましたが、より簡素な''pcmciautils''というシステムに取って代わられました。

自分でダウンロードしてインストールしたければ ftp://ftp.kernel.org/pub/linux/utils/kernel/pcmcia から入手可能です。

カーネル2.6.18の時点では''pcmciautils'' 004が正常に動作する一番古いバージョンです。新しいデバイスのドライバ自動ロードなどの機能を使うために最新版を使用することをおすすめします。

インストールされている''pcmciautils''のバージョンを確認するには：
<pre>
$ pccardctl -V
</pre>


<references/>

{{Nav
|prev=LKN/Chapter1
|next=LKN/Chapter3
}}
